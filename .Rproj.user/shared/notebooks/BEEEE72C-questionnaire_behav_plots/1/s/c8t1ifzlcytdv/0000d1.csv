"0","# Set significance threshold for analyses"
"0","SIGNIFICANCE_THRESHOLD <- 0.2"
"0",""
"0","################## SHARED UTILITY FUNCTIONS ###################"
"0",""
"0","theme_custom <- theme_minimal() +"
"0","  theme("
"0","    panel.grid.minor = element_blank(),"
"0","    legend.position = ""right"","
"0","    plot.title = element_text(size = 12, face = ""bold""),"
"0","    plot.subtitle = element_text(size = 10),"
"0","    axis.title = element_text(size = 10),"
"0","    legend.title = element_text(size = 10),"
"0","    legend.text = element_text(size = 9)"
"0","  )"
"0",""
"0","check_model_diagnostics <- function(model) {"
"0","  conv_check <- model@optinfo$conv$opt"
"0","  list("
"0","    convergence = conv_check,"
"0","    resid_mean = mean(residuals(model)),"
"0","    resid_sd = sd(residuals(model)),"
"0","    resid_normality = shapiro.test(residuals(model))$p.value,"
"0","    outliers = length(boxplot.stats(residuals(model))$out)"
"0","  )"
"0","}"
"0",""
"0","################## DATA PROCESSING FUNCTIONS ###################"
"0",""
"0","process_data <- function(data) {"
"0","  data %>%"
"0","    mutate("
"0","      bet_difference = player.bet2 - player.bet1,"
"0","      consensus_numeric = case_when("
"0","        player.choice1_with %in% c(0, 1) ~ 2,  # 4:0"
"0","        player.choice1_with %in% c(0.25, 0.75) ~ 1,  # 3:1"
"0","        player.choice1_with == 0.5 ~ 0  # 2:2"
"0","      ),"
"0","      direction = if_else(player.choice1_with > 0.5, ""With group"", ""Against group"")"
"0","    )"
"0","}"
"0",""
"0","process_subscale_data <- function(data) {"
"0","  subscale_data <- data %>%"
"0","    group_by(participant.id_in_session) %>%"
"0","    slice(1) %>%"
"0","    select(participant.id_in_session,"
"0","           lsas_p, lsas_s,"
"0","           dass_a, dass_d, dass_s,"
"0","           ssms_cd, ssms_ia,"
"0","           srp_sf_ipm, srp_sf_ca, srp_sf_els, srp_sf_ct,"
"0","           ami_es, ami_sm, ami_ba)"
"0","  "
"0","  subscale_data %>%"
"0","    ungroup() %>%"
"0","    mutate(across(-participant.id_in_session, ~as.vector(scale(.x))))"
"0","}"
"0",""
"0","################## MODEL FUNCTIONS ###################"
"0",""
"0","run_questionnaire_models <- function(quest_var, data) {"
"0","  print(paste(""\nRunning models for:"", quest_var))"
"0","  "
"0","  analysis_data <- data %>%"
"0","    mutate("
"0","      across(c(ssms, dass, lsas, srp_sf, ami, aq_10, age), scale),"
"0","      gender = factor(gender),"
"0","      direction = factor(direction),"
"0","      switch_vs_stay = factor(player.switch_vs_stay),"
"0","      participant.id_in_session = factor(participant.id_in_session)"
"0","    )"
"0","  "
"0","  # Run models with increasing complexity"
"0","  model1 <- lmer(as.formula(paste(""bet_difference ~ direction * consensus_numeric * switch_vs_stay *"", "
"0","                                 quest_var, ""+ age + (1|participant.id_in_session)"")),"
"0","                data = analysis_data,"
"0","                control = lmerControl(optimizer = ""bobyqa""))"
"0","  "
"0","  model2 <- lmer(as.formula(paste(""bet_difference ~ direction * consensus_numeric * switch_vs_stay *"", "
"0","                                 quest_var, ""+ age + (1|participant.id_in_session) + (1|gender)"")),"
"0","                data = analysis_data,"
"0","                control = lmerControl(optimizer = ""bobyqa""))"
"0","  "
"0","  model3 <- lmer(as.formula(paste(""bet_difference ~ direction * consensus_numeric * switch_vs_stay *"", "
"0","                                 quest_var, ""+ age + (1|participant.id_in_session) + (1|gender) + "
"0","                                 (1|direction:participant.id_in_session)"")),"
"0","                data = analysis_data,"
"0","                control = lmerControl(optimizer = ""bobyqa""))"
"0","  "
"0","  model4 <- lmer(as.formula(paste(""bet_difference ~ direction * consensus_numeric * switch_vs_stay *"", "
"0","                                 quest_var, ""+ age + (1|participant.id_in_session) + (1|gender) + "
"0","                                 (1|direction:participant.id_in_session) + (1|consensus_numeric:participant.id_in_session)"")),"
"0","                data = analysis_data,"
"0","                control = lmerControl(optimizer = ""bobyqa""))"
"0","  "
"0","  models_list <- list(model1, model2, model3, model4)"
"0","  aic_values <- sapply(models_list, AIC)"
"0","  winning_model <- models_list[[which.min(aic_values)]]"
"0","  "
"0","  model_anova <- car::Anova(winning_model, type = 2)"
"0","  interaction_p <- model_anova[paste0(""direction:consensus_numeric:switch_vs_stay:"", quest_var), ""Pr(>Chisq)""]"
"0","  "
"0","  list("
"0","    questionnaire = quest_var,"
"0","    winning_model = winning_model,"
"0","    all_models = models_list,"
"0","    aic_values = aic_values,"
"0","    p_value = interaction_p,"
"0","    aic = min(aic_values),"
"0","    diagnostics = check_model_diagnostics(winning_model)"
"0","  )"
"0","}"
"0",""
"0","################## PLOTTING FUNCTIONS ###################"
"0",""
"0","plot_continuous_relationship <- function(var, data, model_results) {"
"0","  subject_averages <- data %>%"
"0","    group_by(participant.id_in_session, direction, consensus_numeric, "
"0","             player.switch_vs_stay, .data[[var]]) %>%"
"0","    summarise("
"0","      mean_diff = mean(bet_difference),"
"0","      .groups = 'drop'"
"0","    ) %>%"
"0","    mutate("
"0","      consensus_level = case_when("
"0","        consensus_numeric == 2 ~ ""4:0"","
"0","        consensus_numeric == 1 ~ ""3:1"","
"0","        consensus_numeric == 0 ~ ""2:2"""
"0","      ),"
"0","      consensus_level = factor(consensus_level, levels = c(""2:2"", ""3:1"", ""4:0""))"
"0","    )"
"0","  "
"0","  effects <- subject_averages %>%"
"0","    group_by(direction, consensus_level, player.switch_vs_stay) %>%"
"0","    summarise("
"0","      correlation = cor(.data[[var]], mean_diff),"
"0","      .groups = 'drop'"
"0","    )"
"0","  "
"0","  p <- ggplot(subject_averages, "
"0","              aes(x = .data[[var]], "
"0","                  y = mean_diff,"
"0","                  color = direction)) +"
"0","    geom_point(alpha = 0.5) +"
"0","    geom_smooth(method = ""lm"", formula = y ~ x) +"
"0","    facet_grid(player.switch_vs_stay ~ consensus_level, "
"0","               labeller = labeller(player.switch_vs_stay = "
"0","                                   c(""0"" = ""Stay trials"", ""1"" = ""Switch trials""))) +"
"0","    labs(x = var,"
"0","         y = ""Bet difference (Bet 2 - Bet 1)"","
"0","         title = paste(""Relationship between"", var, ""and bet difference""),"
"0","         subtitle = paste(""p ="", format.pval(model_results$p_value["
"0","           model_results$questionnaire == var], digits = 3)),"
"0","         caption = paste(""Effect sizes (r) range:"", "
"0","                        round(min(effects$correlation, na.rm = TRUE), 3), ""to"","
"0","                        round(max(effects$correlation, na.rm = TRUE), 3))) +"
"0","    scale_color_manual(values = c(""Against group"" = ""red"", ""With group"" = ""blue"")) +"
"0","    theme_custom"
"0","  "
"0","  print(p)"
"0","}"
"0",""
"0","plot_median_split <- function(var, data, model_results) {"
"0","  summary_data <- data %>%"
"0","    mutate("
"0","      consensus_level = case_when("
"0","        consensus_numeric == 2 ~ ""4:0"","
"0","        consensus_numeric == 1 ~ ""3:1"","
"0","        consensus_numeric == 0 ~ ""2:2"""
"0","      ),"
"0","      consensus_level = factor(consensus_level, levels = c(""2:2"", ""3:1"", ""4:0"")),"
"0","      quest_group = ifelse(.data[[var]] > median(.data[[var]]), ""High"", ""Low"")"
"0","    ) %>%"
"0","    group_by(consensus_level, direction, quest_group, player.switch_vs_stay) %>%"
"0","    summarise("
"0","      mean_diff = mean(bet_difference),"
"0","      se = sd(bet_difference) / sqrt(n()),"
"0","      .groups = 'drop'"
"0","    )"
"0","  "
"0","  p <- ggplot(summary_data, "
"0","              aes(x = consensus_level, "
"0","                  y = mean_diff, "
"0","                  color = direction,"
"0","                  linetype = quest_group,"
"0","                  group = interaction(direction, quest_group))) +"
"0","    geom_line() +"
"0","    geom_point() +"
"0","    geom_errorbar(aes(ymin = mean_diff - se, "
"0","                      ymax = mean_diff + se), "
"0","                  width = 0.2) +"
"0","    facet_wrap(~player.switch_vs_stay,"
"0","               labeller = labeller(player.switch_vs_stay = "
"0","                                   c(""0"" = ""Stay trials"", ""1"" = ""Switch trials""))) +"
"0","    scale_color_manual(values = c(""Against group"" = ""red"", ""With group"" = ""blue"")) +"
"0","    labs(x = ""Group consensus"","
"0","         y = ""Bet difference (Bet 2 - Bet 1)"","
"0","         title = paste(""Effect of"", var, ""(Median-split)""),"
"0","         subtitle = paste(""p ="", format.pval(model_results$p_value["
"0","           model_results$questionnaire == var], digits = 3))) +"
"0","    theme_custom"
"0","  "
"0","  print(p)"
"0","}"
"0",""
"0","analyze_simple_slopes <- function(model, questionnaire_var, data) {"
"0","  probe_points <- data %>%"
"0","    summarise("
"0","      low = mean(!!sym(questionnaire_var)) - sd(!!sym(questionnaire_var)),"
"0","      mean = mean(!!sym(questionnaire_var)),"
"0","      high = mean(!!sym(questionnaire_var)) + sd(!!sym(questionnaire_var))"
"0","    )"
"0","  "
"0","  pred_data <- expand.grid("
"0","    direction = unique(data$direction),"
"0","    consensus_numeric = unique(data$consensus_numeric),"
"0","    switch_vs_stay = c(0, 1),"
"0","    quest_score = c(probe_points$low, probe_points$mean, probe_points$high)"
"0","  ) %>%"
"0","    mutate("
"0","      quest_level = rep(c(""-1 SD"", ""Mean"", ""+1 SD""), "
"0","                       each = length(unique(data$direction)) * "
"0","                         length(unique(data$consensus_numeric)) * 2),"
"0","      direction = factor(direction),"
"0","      switch_vs_stay = factor(switch_vs_stay)"
"0","    )"
"0","  "
"0","  pred_data$age <- 0"
"0","  pred_data[[questionnaire_var]] <- pred_data$quest_score"
"0","  pred_data$predicted <- predict(model, newdata = pred_data, re.form = NA)"
"0","  "
"0","  pred_data <- pred_data %>%"
"0","    mutate("
"0","      consensus_level = case_when("
"0","        consensus_numeric == 2 ~ ""4:0"","
"0","        consensus_numeric == 1 ~ ""3:1"","
"0","        consensus_numeric == 0 ~ ""2:2"""
"0","      ),"
"0","      consensus_level = factor(consensus_level, levels = c(""2:2"", ""3:1"", ""4:0""))"
"0","    )"
"0","  "
"0","  plots <- list()"
"0","  for(choice in c(""0"", ""1"")) {"
"0","    plot_data <- pred_data %>% filter(switch_vs_stay == choice)"
"0","    "
"0","    p <- ggplot(plot_data, "
"0","                aes(x = consensus_level, "
"0","                    y = predicted,"
"0","                    color = direction,"
"0","                    linetype = quest_level,"
"0","                    group = interaction(direction, quest_level))) +"
"0","      geom_line() +"
"0","      geom_point(size = 3) +"
"0","      labs(title = paste(""Simple slopes analysis for"", questionnaire_var, "
"0","                        ""\nin"", if(choice == ""0"") ""Stay"" else ""Switch"", ""trials""),"
"0","           x = ""Consensus Level"","
"0","           y = ""Predicted Bet Difference"","
"0","           color = ""Direction"","
"0","           linetype = paste(questionnaire_var, ""Level"")) +"
"0","      scale_color_manual(values = c(""Against group"" = ""red"", ""With group"" = ""blue"")) +"
"0","      theme_custom"
"0","    "
"0","    plots[[choice]] <- p"
"0","  }"
"0","  "
"0","  list("
"0","    predictions = pred_data,"
"0","    plots = plots,"
"0","    model_summary = summary(model)"
"0","  )"
"0","}"
"0",""
"0","################## MODERATION ANALYSIS ###################"
"0",""
"0","run_moderation_analysis <- function(data, scale_name, subscales = NULL) {"
"0","  data <- data %>%"
"0","    mutate("
"0","      direction = as.factor(direction),"
"0","      consensus_numeric = as.factor(consensus_numeric),"
"0","      switch_vs_stay = as.factor(switch_vs_stay),"
"0","      participant.id_in_session = as.factor(participant.id_in_session)"
"0","    )"
"0","  "
"0","  # Main scale analysis"
"0","  main_model_formula <- paste(""bet_difference ~ direction * consensus_numeric * switch_vs_stay *"", "
"0","                            ""scale_name + age + (1|participant.id_in_session)"")"
"0","  "
"0","  main_model <- lmer(as.formula(main_model_formula),"
"0","                    data = data,"
"0","                    control = lmerControl(optimizer = ""bobyqa""))"
"0","  "
"0","  results <- list("
"0","    main = list("
"0","      scale = scale_name,"
"0","      model = main_model,"
"0","      anova = car::Anova(main_model, type = 2)"
"0","    )"
"0","  )"
"0","  "
"0","  # Subscale analyses"
"0","  if (!is.null(subscales) && length(subscales) > 0) {"
"0","    subscale_results <- list()"
"0","    "
"0","    for (subscale in subscales) {"
"0","      # Create formula for subscale model"
"0","      subscale_formula <- paste(""bet_difference ~ direction * consensus_numeric * switch_vs_stay *"", "
"0","                              subscale, ""+ age + (1|participant.id_in_session)"")"
"0","      "
"0","      # Fit subscale model"
"0","      subscale_model <- lmer(as.formula(subscale_formula),"
"0","                           data = data,"
"0","                           control = lmerControl(optimizer = ""bobyqa""))"
"0","      "
"0","      # Store results"
"0","      subscale_results[[subscale]] <- list("
"0","        scale = subscale,"
"0","        model = subscale_model,"
"0","        anova = car::Anova(subscale_model, type = 2)"
"0","      )"
"0","    }"
"0","    "
"0","    results$subscales <- subscale_results"
"0","  }"
"0","  "
"0","  return(results)"
"0","}"
"0",""
"0","################## RESULTS FORMATTING ###################"
"0",""
"0","format_results <- function(model_results, moderation_results = NULL) {"
"0","  output_text <- ""BET DIFFERENCE BY CHOICE SWITCH AND CONSENSUS - STATISTICAL ANALYSIS RESULTS\n\n"""
"0","  "
"0","  # Add timestamp"
"0","  output_text <- paste0(output_text, ""Analysis run on: "", format(Sys.time(), ""%Y-%m-%d %H:%M:%S""), ""\n\n"")"
"0","  "
"0","  # Primary Analysis Results"
"0","  output_text <- paste0(output_text, ""PRIMARY ANALYSIS RESULTS:\n"","
"0","                       ""================================\n"")"
"0","  "
"0","  for(i in 1:nrow(model_results)) {"
"0","    output_text <- paste0(output_text,"
"0","                         ""\nQuestionnaire: "", model_results$questionnaire[i], ""\n"","
"0","                         ""p-value: "", format.pval(model_results$p_value[i], digits = 3), ""\n"","
"0","                         ""FDR-adjusted p-value: "", format.pval(model_results$p_adjusted[i], digits = 3), ""\n"","
"0","                         ""AIC: "", round(model_results$aic[i], 2), ""\n"","
"0","                         ""Residual normality (p): "", format.pval(model_results$diagnostics$resid_normality[i], digits = 3), ""\n"","
"0","                         ""Model converged: "", !is.null(model_results$diagnostics$convergence[i]), ""\n"")"
"0","  }"
"0","  "
"0","  # Moderation Results"
"0","  if(!is.null(moderation_results)) {"
"0","    output_text <- paste0(output_text, ""\n\nMODERATION ANALYSIS RESULTS:\n"","
"0","                         ""================================\n"")"
"0","    "
"0","    for(scale_name in names(moderation_results)) {"
"0","      results <- moderation_results[[scale_name]]"
"0","      "
"0","      # Main scale results"
"0","      output_text <- paste0(output_text, "
"0","                           ""\nScale: "", results$main$scale, ""\n"","
"0","                           ""----------------\n"","
"0","                           ""Main effects:\n"","
"0","                           paste(capture.output(results$main$anova), collapse = ""\n""), "
"0","                           ""\n\n"")"
"0","      "
"0","      # Subscale results"
"0","      if(!is.null(results$subscales) && length(results$subscales) > 0) {"
"0","        output_text <- paste0(output_text, ""Subscale Results:\n"","
"0","                             ""----------------\n"")"
"0","        "
"0","        for(subscale_name in names(results$subscales)) {"
"0","          sub_result <- results$subscales[[subscale_name]]"
"0","          output_text <- paste0(output_text,"
"0","                               ""\nSubscale: "", sub_result$scale, ""\n"","
"0","                               paste(capture.output(sub_result$anova), collapse = ""\n""),"
"0","                               ""\n\n"")"
"0","        }"
"0","      }"
"0","    }"
"0","  }"
"0","  "
"0","  return(output_text)"
"0","}"
"0",""
"0","################## MAIN ANALYSIS FUNCTION ###################"
"0",""
"0","run_analysis <- function() {"
"0","  # Read and process data"
"0","  df <- read_csv(here(""data"", ""preprocessed"", ""merged_test_data.csv""), "
"0","                 show_col_types = FALSE) %>%"
"0","    process_data()"
"0","  "
"0","  # Define questionnaire variables and subscale mapping"
"0","  questionnaire_vars <- c(""ssms"", ""dass"", ""lsas"", ""srp_sf"", ""ami"", ""aq_10"")"
"0","  subscale_mapping <- list("
"0","    lsas = c(""lsas_p"", ""lsas_s""),"
"0","    dass = c(""dass_a"", ""dass_d"", ""dass_s""),"
"0","    ssms = c(""ssms_cd"", ""ssms_ia""),"
"0","    srp_sf = c(""srp_sf_ipm"", ""srp_sf_ca"", ""srp_sf_els"", ""srp_sf_ct""),"
"0","    ami = c(""ami_es"", ""ami_sm"", ""ami_ba""),"
"0","    aq_10 = NULL"
"0","  )"
"0","  "
"0","  # Run models for all questionnaires"
"0","  all_results <- map(questionnaire_vars, function(var) {"
"0","    result <- run_questionnaire_models(var, df)"
"0","    tibble("
"0","      questionnaire = result$questionnaire,"
"0","      p_value = result$p_value,"
"0","      p_adjusted = p.adjust(result$p_value, method = ""fdr""),"
"0","      aic = result$aic,"
"0","      diagnostics = list(result$diagnostics)"
"0","    )"
"0","  })"
"0","  "
"0","  # Combine results"
"0","  model_results <- bind_rows(all_results)"
"0","  "
"0","  # Identify significant results"
"0","  significant_vars <- model_results %>%"
"0","    filter(p_adjusted < SIGNIFICANCE_THRESHOLD) %>%"
"0","    pull(questionnaire)"
"0","  "
"0","  # Create plots for all relationships"
"0","  for(var in questionnaire_vars) {"
"0","    plot_continuous_relationship(var, df, model_results)"
"0","  }"
"0","  "
"0","  # Process subscales and run moderation analysis for significant results"
"0","  moderation_results <- NULL"
"0","  if(length(significant_vars) > 0) {"
"0","      # Process subscale data"
"0","      subscale_data_scaled <- process_subscale_data(df)"
"0","      "
"0","      df_with_subscales <- df %>%"
"0","          left_join(subscale_data_scaled, by = ""participant.id_in_session"") %>%"
"0","          mutate("
"0","              switch_vs_stay = factor(player.switch_vs_stay, levels = c(0, 1)),"
"0","              direction = factor(direction, levels = c(""Against group"", ""With group"")),"
"0","              consensus_numeric = factor(consensus_numeric, levels = c(0, 1, 2)),"
"0","              participant.id_in_session = factor(participant.id_in_session)"
"0","          )"
"0","      "
"0","      # Run moderation analyses for significant scales and their subscales"
"0","      moderation_results <- map(significant_vars, function(scale) {"
"0",""
"0","          # Get subscales for this scale"
"0","          subscales <- subscale_mapping[[scale]]"
"0","          "
"0","          # Make a copy of the data for this analysis"
"0","          mod_data <- df_with_subscales"
"0","          "
"0","          # Clean up subscale names and data"
"0","          if (!is.null(subscales)) {"
"0","              for (subscale in subscales) {"
"0","                  # Use the .x version of the subscale (from the first join)"
"0","                  subscale_x <- paste0(subscale, "".x"")"
"0","                  if (subscale_x %in% names(mod_data)) {"
"0","                      # Create clean version of subscale without suffix"
"0","                      mod_data <- mod_data %>%"
"0","                          mutate(!!subscale := get(subscale_x))"
"0","                  } else {"
"0","                      print(paste(""WARNING: Subscale not found:"", subscale_x))"
"0","                  }"
"0","              }"
"0","          }"
"0","          "
"0","          # Rename main scale last to avoid conflicts"
"0","          mod_data <- mod_data %>%"
"0","              rename(scale_name = !!scale)"
"0","          "
"0","          # Run moderation analysis for main scale and subscales"
"0","          result <- run_moderation_analysis(mod_data, scale, subscales)"
"0","          "
"0","          # Return results"
"0","          result"
"0","      })"
"0","      names(moderation_results) <- significant_vars"
"0","      "
"0","    # Create additional plots for significant results"
"0","    for(var in significant_vars) {"
"0","      plot_median_split(var, df, model_results)"
"0","      result <- run_questionnaire_models(var, df)"
"0","      slopes_analysis <- analyze_simple_slopes(result$winning_model, var, df)"
"0","      print(slopes_analysis$plots[[""0""]])"
"0","      print(slopes_analysis$plots[[""1""]])"
"0","    }"
"0","  }"
"0","  "
"0","  # Format and save results"
"0","  results_text <- format_results(model_results, moderation_results)"
"0","  "
"0","  # Create output directory if it doesn't exist"
"0","  dir.create(here(""output"", ""behav""), showWarnings = FALSE, recursive = TRUE)"
"0","  "
"0","  # Save results"
"0","  writeLines(results_text, "
"0","            here(""output"", ""behav"", ""bet_difference_by_choice_switch.txt""))"
"0","  "
"0","  # Save moderation results object for further analysis if needed"
"0","  if(!is.null(moderation_results)) {"
"0","    saveRDS(moderation_results, "
"0","            here(""output"", ""behav"", ""moderation_results.rds""))"
"0","  }"
"0","  "
"0","  return(list("
"0","    model_results = model_results,"
"0","    significant_vars = significant_vars,"
"0","    moderation_results = moderation_results"
"0","  ))"
"0","}"
"0",""
"0","################## RUN ANALYSES ###################"
"0",""
"0","# Set random seed for reproducibility"
"0","set.seed(123)"
"0",""
"0","# Run the analysis"
"0","results <- run_analysis()"
"1","[1]"
"1"," ""\nRunning models for: ssms"""
"1","
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"1","[1]"
"1"," ""\nRunning models for: dass"""
"1","
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"1","[1]"
"1"," ""\nRunning models for: lsas"""
"1","
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"1","[1]"
"1"," ""\nRunning models for: srp_sf"""
"1","
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"1","[1]"
"1"," ""\nRunning models for: ami"""
"1","
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"1","[1]"
"1"," ""\nRunning models for: aq_10"""
"1","
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"1","[1]"
"1"," ""\nRunning models for: srp_sf"""
"1","
"
