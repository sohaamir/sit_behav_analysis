"0","# Read and process data"
"0","merged_data <- read_csv(here(""data"", ""preprocessed"", ""merged_test_data.csv""), show_col_types = FALSE)"
"0",""
"0","# Initial data checks and summaries"
"0","print(""Original data questionnaire summary:"")"
"1","[1]"
"1"," ""Original data questionnaire summary:"""
"1","
"
"0","summary(merged_data[c(""ssms"", ""dass"", ""lsas"", ""srp_sf"", ""ami"", ""aq_10"", ""age"")])"
"1",""
"1","      ssms     "
"1","      dass     "
"1","      lsas     "
"1","     srp_sf    "
"1","      ami    "
"1","     aq_10    "
"1","      age      "
"1","
"
"1"," Min.   : 6.0  "
"1"," Min.   :50.0  "
"1"," Min.   :27.0  "
"1"," Min.   :34.0  "
"1"," Min.   :40  "
"1"," Min.   :1.0  "
"1"," Min.   :19.0  "
"1","
"
"1"," 1st Qu.: 7.0  "
"1"," 1st Qu.:66.0  "
"1"," 1st Qu.:29.0  "
"1"," 1st Qu.:40.0  "
"1"," 1st Qu.:42  "
"1"," 1st Qu.:2.0  "
"1"," 1st Qu.:28.0  "
"1","
"
"1"," Median : 9.5  "
"1"," Median :70.5  "
"1"," Median :36.0  "
"1"," Median :49.0  "
"1"," Median :44  "
"1"," Median :3.5  "
"1"," Median :33.0  "
"1","
"
"1"," Mean   :10.4  "
"1"," Mean   :68.9  "
"1"," Mean   :35.7  "
"1"," Mean   :47.3  "
"1"," Mean   :48  "
"1"," Mean   :3.1  "
"1"," Mean   :32.7  "
"1","
"
"1"," 3rd Qu.:14.0  "
"1"," 3rd Qu.:80.0  "
"1"," 3rd Qu.:42.0  "
"1"," 3rd Qu.:54.0  "
"1"," 3rd Qu.:56  "
"1"," 3rd Qu.:4.0  "
"1"," 3rd Qu.:39.0  "
"1","
"
"1"," Max.   :15.0  "
"1"," Max.   :80.0  "
"1"," Max.   :45.0  "
"1"," Max.   :58.0  "
"1"," Max.   :60  "
"1"," Max.   :5.0  "
"1"," Max.   :45.0  "
"1","
"
"0","# Data processing with unbalanced consensus design"
"0","switch_probabilities <- merged_data %>%"
"0","  group_by(participant.id_in_session) %>%"
"0","  mutate("
"0","    consensus_group = case_when("
"0","      player.choice1_with == 0.5 ~ ""2:2_against"","
"0","      player.choice1_with == 0 ~ ""4:0_against"","
"0","      player.choice1_with == 0.25 ~ ""3:1_against"","
"0","      player.choice1_with == 0.75 ~ ""3:1_with"","
"0","      player.choice1_with == 1 ~ ""4:0_with"""
"0","    ),"
"0","    consensus_level = case_when("
"0","      player.choice1_with %in% c(0, 1) ~ ""4:0"","
"0","      player.choice1_with %in% c(0.25, 0.75) ~ ""3:1"","
"0","      player.choice1_with == 0.5 ~ ""2:2"""
"0","    ),"
"0","    direction = if_else(player.choice1_with >= 0.5, ""With group"", ""Against group"")"
"0","  ) %>%"
"0","  group_by(participant.id_in_session, consensus_group, direction, gender) %>%"
"0","  summarise("
"0","    switch_prob = mean(player.switch_vs_stay) * 100,"
"0","    .groups = 'drop'"
"0","  ) %>%"
"0","  left_join("
"0","    merged_data %>%"
"0","      group_by(participant.id_in_session) %>%"
"0","      slice(1) %>%"
"0","      dplyr::select(participant.id_in_session, ssms, dass, lsas, srp_sf, ami, aq_10, age),"
"0","    by = ""participant.id_in_session"""
"0","  )"
"0",""
"0","# Create alternative dataset with 2:2 grouped in ""with"" condition"
"0","switch_probabilities_alt <- switch_probabilities %>%"
"0","  mutate(consensus_group = case_when("
"0","    consensus_group == ""2:2_against"" ~ ""2:2_with"","
"0","    TRUE ~ as.character(consensus_group)"
"0","  ))"
"0",""
"0","# Scale variables and convert factors"
"0","switch_probabilities <- switch_probabilities %>%"
"0","  mutate("
"0","    across(c(ssms, dass, lsas, srp_sf, ami, aq_10, age), scale),"
"0","    gender = factor(gender),"
"0","    consensus_group = factor(consensus_group, "
"0","                           levels = c(""2:2_against"", ""3:1_against"", ""4:0_against"","
"0","                                    ""3:1_with"", ""4:0_with""))"
"0","  )"
"0",""
"0","switch_probabilities_alt <- switch_probabilities_alt %>%"
"0","  mutate("
"0","    across(c(ssms, dass, lsas, srp_sf, ami, aq_10, age), scale),"
"0","    gender = factor(gender),"
"0","    consensus_group = factor(consensus_group, "
"0","                           levels = c(""3:1_against"", ""4:0_against"","
"0","                                    ""2:2_with"", ""3:1_with"", ""4:0_with""))"
"0","  )"
"0",""
"0","# Modified diagnostic checking function"
"0","check_model_diagnostics <- function(model) {"
"0","  conv_check <- model@optinfo$conv$opt"
"0","  diagnostics <- list("
"0","    convergence = conv_check,"
"0","    resid_mean = mean(residuals(model)),"
"0","    resid_sd = sd(residuals(model)),"
"0","    resid_normality = shapiro.test(residuals(model))$p.value"
"0","  )"
"0","  return(diagnostics)"
"0","}"
"0",""
"0","# Modified model running function for unbalanced design"
"0","run_questionnaire_models <- function(quest_var) {"
"0","  print(paste(""\nRunning models for:"", quest_var))"
"0","  "
"0","  model1 <- lmer(as.formula(paste(""switch_prob ~ consensus_group *"", quest_var, "
"0","                                 ""+ age + (1|participant.id_in_session)"")),"
"0","                data = switch_probabilities,"
"0","                control = lmerControl(optimizer = ""bobyqa""))"
"0","  "
"0","  model2 <- lmer(as.formula(paste(""switch_prob ~ consensus_group *"", quest_var,"
"0","                                 ""+ age + (1|participant.id_in_session) + (1|gender)"")),"
"0","                data = switch_probabilities,"
"0","                control = lmerControl(optimizer = ""bobyqa""))"
"0","  "
"0","  models_list <- list(model1, model2)"
"0","  aic_values <- sapply(models_list, AIC)"
"0","  winning_model <- models_list[[which.min(aic_values)]]"
"0","  "
"0","  alt_model <- lmer(as.formula(paste(""switch_prob ~ consensus_group *"", quest_var, "
"0","                                    ""+ age + (1|participant.id_in_session)"")),"
"0","                   data = switch_probabilities_alt,"
"0","                   control = lmerControl(optimizer = ""bobyqa""))"
"0","  "
"0","  model_anova <- car::Anova(winning_model, type = 2)"
"0","  interaction_p <- model_anova[paste0(""consensus_group:"", quest_var), ""Pr(>F)""]"
"0","  "
"0","  alt_anova <- car::Anova(alt_model, type = 2)"
"0","  alt_p <- alt_anova[paste0(""consensus_group:"", quest_var), ""Pr(>F)""]"
"0","  "
"0","  list("
"0","    questionnaire = quest_var,"
"0","    winning_model = winning_model,"
"0","    p_value = interaction_p,"
"0","    alt_p_value = alt_p,"
"0","    aic = min(aic_values),"
"0","    diagnostics = check_model_diagnostics(winning_model)"
"0","  )"
"0","}"
"0",""
"0","# Custom theme"
"0","theme_custom <- theme_minimal() +"
"0","  theme("
"0","    panel.grid.minor = element_blank(),"
"0","    legend.position = ""right"","
"0","    plot.title = element_text(size = 12, face = ""bold""),"
"0","    plot.subtitle = element_text(size = 10),"
"0","    axis.title = element_text(size = 10),"
"0","    legend.title = element_text(size = 10),"
"0","    legend.text = element_text(size = 9)"
"0","  )"
"0",""
"0","# Continuous relationship plotting function"
"0","plot_continuous_relationship <- function(var, data, model_results) {"
"0","  data <- data %>%"
"0","    mutate("
"0","      consensus_level = case_when("
"0","        str_detect(consensus_group, ""4:0"") ~ ""4:0"","
"0","        str_detect(consensus_group, ""3:1"") ~ ""3:1"","
"0","        str_detect(consensus_group, ""2:2"") ~ ""2:2"""
"0","      ),"
"0","      consensus_level = factor(consensus_level, levels = c(""2:2"", ""3:1"", ""4:0""))"
"0","    )"
"0","  "
"0","  effects <- data %>%"
"0","    group_by(direction, consensus_level) %>%"
"0","    summarise("
"0","      correlation = cor(.data[[var]], switch_prob),"
"0","      .groups = 'drop'"
"0","    )"
"0","  "
"0","  p <- ggplot(data, "
"0","              aes(x = .data[[var]], "
"0","                  y = switch_prob,"
"0","                  color = direction)) +"
"0","    geom_point(alpha = 0.5) +"
"0","    geom_smooth(method = ""lm"", formula = y ~ x) +"
"0","    facet_wrap(~consensus_level) +"
"0","    labs(x = var,"
"0","         y = ""Choice switch probability (%)"","
"0","         title = paste(""Relationship between"", var, ""and switch probability""),"
"0","         subtitle = paste(""Primary analysis p ="", format.pval(model_results$p_value[model_results$questionnaire == var], digits = 3),"
"0","                         ""\nRobustness check p ="", format.pval(model_results$alt_p_value[model_results$questionnaire == var], digits = 3)),"
"0","         caption = paste(""Effect sizes (r) range:"", "
"0","                        round(min(effects$correlation), 3), ""to"","
"0","                        round(max(effects$correlation), 3))) +"
"0","    scale_color_manual(values = c(""Against group"" = ""red"", ""With group"" = ""blue"")) +"
"0","    theme_custom"
"0","  "
"0","  print(p)"
"0","}"
"0",""
"0","# Simple slopes analysis function"
"0","analyze_simple_slopes <- function(model, questionnaire_var) {"
"0","  # Create probe points for the questionnaire variable"
"0","  probe_points <- switch_probabilities %>%"
"0","    summarise("
"0","      low = mean(!!sym(questionnaire_var)) - sd(!!sym(questionnaire_var)),"
"0","      mean = mean(!!sym(questionnaire_var)),"
"0","      high = mean(!!sym(questionnaire_var)) + sd(!!sym(questionnaire_var))"
"0","    )"
"0","  "
"0","  # Get predicted values at each probe point"
"0","  pred_data <- expand.grid("
"0","    consensus_group = levels(switch_probabilities$consensus_group),"
"0","    quest_score = c(probe_points$low, probe_points$mean, probe_points$high)"
"0","  ) %>%"
"0","    mutate("
"0","      quest_level = rep(c(""-1 SD"", ""Mean"", ""+1 SD""), "
"0","                       each = length(levels(switch_probabilities$consensus_group)))"
"0","    )"
"0","  "
"0","  # Add other necessary variables at their means/reference levels"
"0","  pred_data$age <- 0  # since age is scaled, 0 is the mean"
"0","  "
"0","  # Create column with questionnaire variable name"
"0","  pred_data[[questionnaire_var]] <- pred_data$quest_score"
"0","  "
"0","  # Get predictions"
"0","  pred_data$predicted <- predict(model, newdata = pred_data, re.form = NA)"
"0","  "
"0","  # Create plot"
"0","  p <- ggplot(pred_data, "
"0","              aes(x = consensus_group, "
"0","                  y = predicted, "
"0","                  color = quest_level, "
"0","                  group = quest_level)) +"
"0","    geom_line() +"
"0","    geom_point(size = 3) +"
"0","    labs(title = paste(""Simple slopes analysis for"", questionnaire_var),"
"0","         x = ""Consensus Group"","
"0","         y = ""Predicted Switch Probability (%)"","
"0","         color = paste(questionnaire_var, ""Level"")) +"
"0","    scale_color_manual(values = c(""red"", ""purple"", ""blue"")) +"
"0","    theme_custom"
"0","  "
"0","  # Get model summary for slopes"
"0","  model_summary <- summary(model)"
"0","  "
"0","  return(list("
"0","    predictions = pred_data,"
"0","    plot = p,"
"0","    model_summary = model_summary"
"0","  ))"
"0","}"
"0",""
"0","# Run main analyses"
"0","questionnaire_vars <- c(""ssms"", ""dass"", ""lsas"", ""srp_sf"", ""ami"", ""aq_10"")"
"0","model_results <- map_df(questionnaire_vars, function(var) {"
"0","  result <- run_questionnaire_models(var)"
"0","  tibble("
"0","    questionnaire = result$questionnaire,"
"0","    p_value = result$p_value,"
"0","    alt_p_value = result$alt_p_value,"
"0","    p_adjusted = p.adjust(result$p_value, method = ""fdr""),"
"0","    aic = result$aic,"
"0","    resid_normality = result$diagnostics$resid_normality,"
"0","    model_converged = !is.null(result$diagnostics$convergence)"
"0","  )"
"0","})"
"1","[1]"
"1"," ""\nRunning models for: ssms"""
"1","
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"1","[1]"
"1"," ""\nRunning models for: dass"""
"1","
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"1","[1]"
"1"," ""\nRunning models for: lsas"""
"1","
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"1","[1]"
"1"," ""\nRunning models for: srp_sf"""
"1","
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"1","[1]"
"1"," ""\nRunning models for: ami"""
"1","
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"1","[1]"
"1"," ""\nRunning models for: aq_10"""
"1","
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"0","# Print results"
"0","print(""Model results for each questionnaire:"")"
"1","[1]"
"1"," ""Model results for each questionnaire:"""
"1","
"
"0","print(model_results %>% "
"0","        dplyr::select(questionnaire, p_value, alt_p_value, p_adjusted) %>%"
"0","        mutate(across(where(is.numeric), ~round(., 3))))"
"2","Error in (function (cond)  : 
  error in evaluating the argument 'x' in selecting a method for function 'print': Can't select columns that don't exist.
[31m✖[39m Column `p_value` doesn't exist.
"
