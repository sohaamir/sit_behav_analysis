"0","################## MODERATION FOR SIGNIFICANT RESULTS ONLY ###################"
"0",""
"0","# Define subscale mapping"
"0","subscale_mapping <- list("
"0","  lsas = c(""lsas_p"", ""lsas_s""),"
"0","  dass = c(""dass_a"", ""dass_d"", ""dass_s""),"
"0","  ssms = c(""ssms_cd"", ""ssms_ia""),"
"0","  srp_sf = c(""srp_sf_ipm"", ""srp_sf_ca"", ""srp_sf_els"", ""srp_sf_ct""),"
"0","  ami = c(""ami_es"", ""ami_sm"", ""ami_ba""),"
"0","  aq_10 = NULL"
"0",")"
"0",""
"0","# Extract and scale the subscale data at participant level"
"0","subscale_data <- df %>%"
"0","  group_by(participant.id_in_session) %>%"
"0","  slice(1) %>%"
"0","  select(participant.id_in_session,"
"0","         lsas_p, lsas_s,"
"0","         dass_a, dass_d, dass_s,"
"0","         ssms_cd, ssms_ia,"
"0","         srp_sf_ipm, srp_sf_ca, srp_sf_els, srp_sf_ct,"
"0","         ami_es, ami_sm, ami_ba) "
"0",""
"0","# Scale the columns separately"
"0","subscale_data_scaled <- subscale_data %>%"
"0","  ungroup() %>%"
"0","  mutate(across(-participant.id_in_session, ~as.vector(scale(.x))))"
"0",""
"0","# Define function for moderation analysis"
"0","run_moderation_analysis <- function(data, scale_name, subscales = NULL) {"
"0","  # Run moderation for main scale"
"0","  main_model <- lmer(bet_difference ~ direction * consensus_numeric * switch_vs_stay * scale_name + "
"0","                    age + (1|participant.id_in_session),"
"0","                    data = data,"
"0","                    control = lmerControl(optimizer = ""bobyqa""))"
"0","  "
"0","  results <- list(main = list("
"0","    scale = scale_name,"
"0","    model = main_model,"
"0","    summary = summary(main_model)"
"0","  ))"
"0","  "
"0","  # Run for subscales if they exist"
"0","  if (!is.null(subscales)) {"
"0","    subscale_results <- map(subscales, function(subscale) {"
"0","      if(subscale %in% names(data)) {  # Only run if subscale exists in data"
"0","        sub_model <- lmer(as.formula(paste("
"0","          ""bet_difference ~ direction * consensus_numeric * switch_vs_stay *"", subscale,"
"0","          ""+ age + (1|participant.id_in_session)"""
"0","        )),"
"0","        data = data,"
"0","        control = lmerControl(optimizer = ""bobyqa""))"
"0","        "
"0","        list("
"0","          scale = subscale,"
"0","          model = sub_model,"
"0","          summary = summary(sub_model)"
"0","        )"
"0","      } else {"
"0","        NULL"
"0","      }"
"0","    })"
"0","    results$subscales <- compact(subscale_results)  # Remove NULL results"
"0","  }"
"0","  "
"0","  return(results)"
"0","}"
"0",""
"0","# Join scaled subscales to data"
"0","df_with_subscales <- df %>%"
"0","  left_join(subscale_data_scaled, by = ""participant.id_in_session"")"
"0",""
"0","# Run the moderation analysis for significant results"
"0","if(nrow(significant_results) > 0) {"
"0","  moderation_results <- map(significant_results$questionnaire,"
"0","                           function(scale) {"
"0","    subscales <- subscale_mapping[[scale]]"
"0","    "
"0","    # Prepare data with scale and subscales"
"0","    mod_data <- df_with_subscales %>%"
"0","      mutate("
"0","        switch_vs_stay = factor(switch_vs_stay),"
"0","        direction = factor(direction)"
"0","      ) %>%"
"0","      rename(scale_name = !!scale)"
"0","    "
"0","    run_moderation_analysis(mod_data, ""scale_name"", subscales)"
"0","  })"
"0","  "
"0","  # Print results and create visualization"
"0","  for(i in seq_along(moderation_results)) {"
"0","    scale_name <- significant_results$questionnaire[i]"
"0","    results <- moderation_results[[i]]"
"0","    "
"0","    cat(""\nModeration Analysis Results for"", scale_name, ""\n"")"
"0","    cat(""Main Scale Results:\n"")"
"0","    print(car::Anova(results$main$model, type = 2))"
"0","    "
"0","    if(!is.null(results$subscales)) {"
"0","      cat(""\nSubscale Results:\n"")"
"0","      for(sub_result in results$subscales) {"
"0","        cat(""\nSubscale:"", sub_result$scale, ""\n"")"
"0","        print(car::Anova(sub_result$model, type = 2))"
"0","      }"
"0","    }"
"0","    "
"0","    # Create visualization for significant moderations"
"0","    plot_moderation <- function(model, title) {"
"0","      # Create data frame for predictions"
"0","      new_data <- expand.grid("
"0","        direction = unique(model@frame$direction),"
"0","        consensus_numeric = unique(model@frame$consensus_numeric),"
"0","        switch_vs_stay = c(0, 1),"
"0","        scale_name = c(-1, 0, 1),"
"0","        age = 0  # mean of scaled age"
"0","      )"
"0","      "
"0","      # Get predictions"
"0","      new_data$predicted <- predict(model, newdata = new_data, re.form = NA)"
"0","      "
"0","      # Convert consensus numeric to factor for plotting"
"0","      new_data <- new_data %>%"
"0","        mutate("
"0","          consensus_level = case_when("
"0","            consensus_numeric == 2 ~ ""4:0"","
"0","            consensus_numeric == 1 ~ ""3:1"","
"0","            consensus_numeric == 0 ~ ""2:2"""
"0","          ),"
"0","          consensus_level = factor(consensus_level, levels = c(""2:2"", ""3:1"", ""4:0""))"
"0","        )"
"0","      "
"0","      # Create separate plots for switch and stay"
"0","      plots <- list()"
"0","      "
"0","      for(choice in c(""0"", ""1"")) {"
"0","        plot_data <- new_data %>% filter(switch_vs_stay == choice)"
"0","        "
"0","        p <- ggplot(plot_data, "
"0","                   aes(x = consensus_level, "
"0","                       y = predicted, "
"0","                       color = direction,"
"0","                       linetype = as.factor(scale_name),"
"0","                       group = interaction(direction, scale_name))) +"
"0","          geom_line() +"
"0","          geom_point() +"
"0","          scale_color_manual(values = c(""Against group"" = ""red"", ""With group"" = ""blue"")) +"
"0","          scale_linetype_discrete(name = ""Scale Score"","
"0","                                labels = c(""-1 SD"", ""Mean"", ""+1 SD"")) +"
"0","          theme_custom +"
"0","          labs(title = paste(title, ""\nin"", if(choice == ""0"") ""Stay"" else ""Switch"", ""trials""),"
"0","               x = ""Consensus Group"","
"0","               y = ""Predicted Bet Difference"")"
"0","        "
"0","        plots[[choice]] <- p"
"0","      }"
"0","      "
"0","      return(plots)"
"0","    }"
"0","    "
"0","    plots <- plot_moderation(results$main$model, "
"0","                           paste(""Moderation Effect of"", scale_name))"
"0","    "
"0","    # Print both plots"
"0","    print(plots[[""0""]])  # Stay trials"
"0","    print(plots[[""1""]])  # Switch trials"
"0","  }"
"0","} else {"
"0","  print(""No significant results to analyze with moderation"")"
"0","}"
"1","[1m[33mError[39m in `map()`:[22m
[38;5;255m[36mâ„¹[38;5;255m In index: 1.[39m
[1mCaused by error in `mutate()`:[22m
[38;5;255m[36mâ„¹[38;5;255m In argument: `switch_vs_stay = factor(switch_vs_stay)`.[39m
[1mCaused by error:[22m
[33m![39m object 'switch_vs_stay' not found
Backtrace:
[90m  1. [39m[1mpurrr[22m::map(...)
[90m 16. [39m[1mbase[22m::factor(switch_vs_stay)
"
