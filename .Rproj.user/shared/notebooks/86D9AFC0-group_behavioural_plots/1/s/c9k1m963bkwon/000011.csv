"0","source(here(""R"", ""mixed_models_group.R""))"
"2","[38;5;255m[90m[conflicted][38;5;255m Removing existing preference.[39m"
"2","[38;5;255m[90m[conflicted][38;5;255m Will prefer [1m[34mdplyr[38;5;255m[22m::select over any other package.[39m"
"2","[38;5;255m[90m[conflicted][38;5;255m Removing existing preference.[39m"
"2","[38;5;255m[90m[conflicted][38;5;255m Will prefer [1m[34mdplyr[38;5;255m[22m::filter over any other package.[39m"
"2","[38;5;255m[90m[conflicted][38;5;255m Removing existing preference.[39m"
"2","[38;5;255m[90m[conflicted][38;5;255m Will prefer [1m[34mlmerTest[38;5;255m[22m::lmer over any other package.[39m"
"0","################## SPECIFIC PREPROCESSING ###################"
"0","process_bet_difference_data <- function(data) {"
"0","  # Calculate bet difference and create groups"
"0","  data %>%"
"0","    mutate("
"0","      bet_difference = player.bet2 - player.bet1,"
"0","      direction = if_else(player.choice1_with > 0.5, "
"0","                         ""With group"", ""Against group"")"
"0","    ) %>%"
"0","    filter(!is.na(direction)) %>%  # Remove any NA cases"
"0","    mutate("
"0","      consensus_numeric = case_when("
"0","        player.choice1_with %in% c(0, 1) ~ 2,"
"0","        player.choice1_with %in% c(0.25, 0.75) ~ 1,"
"0","        player.choice1_with == 0.5 ~ 0"
"0","      ),"
"0","      direction = factor(direction),"
"0","      gender = factor(gender),"
"0","      switch_vs_stay = factor(player.switch_vs_stay),"
"0","      participant.id_in_session = factor(participant.id_in_session)"
"0","    )"
"0","}"
"0",""
"0","################## SPECIFIC MODEL FORMULAS ###################"
"0","bet_difference_formulas <- list("
"0","  m1 = bet_difference ~ direction * consensus_numeric * switch_vs_stay + "
"0","         (1|participant.id_in_session),"
"0","  "
"0","  m2 = bet_difference ~ direction * consensus_numeric * switch_vs_stay + "
"0","         (1|participant.id_in_session) + (1|gender),"
"0","  "
"0","  m3 = bet_difference ~ direction * consensus_numeric * switch_vs_stay + "
"0","         (1|participant.id_in_session) + (1|gender) + "
"0","         (1|direction:participant.id_in_session),"
"0","  "
"0","  m4 = bet_difference ~ direction * consensus_numeric * switch_vs_stay + "
"0","         (1|participant.id_in_session) + (1|gender) + "
"0","         (1|consensus_numeric:participant.id_in_session),"
"0","  "
"0","  m5 = bet_difference ~ direction * consensus_numeric * switch_vs_stay + "
"0","         (1|participant.id_in_session) + (1|gender) + "
"0","         (1|direction:participant.id_in_session) + "
"0","         (1|consensus_numeric:participant.id_in_session)"
"0",")"
"0",""
"0","################## SPECIFIC PLOTTING FUNCTION ###################"
"0","create_bet_difference_plot <- function(data, model_results, anova_results, params) {"
"0","  interaction_p <- anova_results["
"0","    ""direction:consensus_numeric:switch_vs_stay"", "
"0","    ""Pr(>Chisq)""]"
"0","  "
"0","  plot_data <- data %>%"
"0","    group_by(consensus_numeric, direction, switch_vs_stay) %>%"
"0","    summarise("
"0","      mean_diff = mean(bet_difference),"
"0","      se = sd(bet_difference) / sqrt(n()),"
"0","      .groups = 'drop'"
"0","    ) %>%"
"0","    mutate("
"0","      consensus_category = case_when("
"0","        consensus_numeric == 2 ~ ""4:0"","
"0","        consensus_numeric == 1 ~ ""3:1"","
"0","        consensus_numeric == 0 ~ ""2:2"""
"0","      ),"
"0","      consensus_category = factor(consensus_category, "
"0","                                levels = c(""2:2"", ""3:1"", ""4:0""))"
"0","    )"
"0","  "
"0","  ggplot(plot_data, "
"0","         aes(x = consensus_category, "
"0","             y = mean_diff, "
"0","             color = direction, "
"0","             group = direction)) +"
"0","    facet_wrap(~ifelse(switch_vs_stay == 1, "
"0","                      '""Switch"" trials:\nC2(t) â‰  C1(t)', "
"0","                      '""Stay"" trials:\nC2(t) = C1(t)')) +"
"0","    geom_line(linewidth = 1) +"
"0","    geom_point(size = 3) +"
"0","    geom_errorbar(aes(ymin = mean_diff - se,"
"0","                      ymax = mean_diff + se),"
"0","                  width = 0.2) +"
"0","    geom_ribbon(aes(ymin = mean_diff - se,"
"0","                    ymax = mean_diff + se,"
"0","                    fill = direction),"
"0","                alpha = 0.2,"
"0","                color = NA) +"
"0","    scale_color_manual(values = c(""Against group"" = ""red"", "
"0","                                 ""With group"" = ""blue"")) +"
"0","    scale_fill_manual(values = c(""Against group"" = ""red"", "
"0","                                ""With group"" = ""blue"")) +"
"0","    scale_y_continuous(limits = c(-0.5, 0.7), "
"0","                      breaks = seq(-0.5, 0.7, by = 0.1)) +"
"0","    labs("
"0","      x = ""Group consensus"","
"0","      y = ""Bet difference (Bet 2 - Bet 1)"","
"0","      color = ""Direction"","
"0","      fill = ""Direction"","
"0","      title = ""Direction by Choice:"","
"0","      subtitle = sprintf(""P < %.1e"", interaction_p)"
"0","    ) +"
"0","    theme_custom"
"0","}"
"0",""
"0","################## RUN ANALYSIS ###################"
"0","# Read data"
"0","data <- read_csv(here(""data"", ""preprocessed"", ""merged_test_data.csv""), "
"0","                 show_col_types = FALSE)"
"0",""
"0","# Run analysis"
"0","bet_difference_results <- run_mixed_model_pipeline("
"0","  data = data,"
"0","  preprocessing_function = process_bet_difference_data,"
"0","  model_formulas = bet_difference_formulas,"
"0","  plot_function = create_bet_difference_plot,"
"0","  analysis_name = ""Bet Difference by Choice Switch"","
"0","  output_path = here(""output"", ""behav"", ""group"","
"0","                    ""bet_difference_by_choice_switch.txt""),"
"0","  additional_params = list("
"0","    emmeans_specs = c(""direction"", ""consensus_numeric"", ""switch_vs_stay"")"
"0","  )"
"0",")"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
"2","boundary (singular) fit: see help('isSingular')
"
