"0","# Read data"
"0","data <- read_csv(here(""data"", ""preprocessed"", ""merged_test_data.csv""))"
"2","[1mRows: [22m[34m6000[39m [1mColumns: [22m[34m94[39m"
"2","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m (12): participant.label, participant.code, player.choice1, player.choice2, player.left_image, player.right_image, player.chosen_image_one, player.chosen_image_two, player.chosen_image_computer, player.chosen_image_computer_two, group.seventy_percent_ima...
[32mdbl[39m (80): participant.id_in_session, player.id_in_group, player.bet1, player.bet2, player.trial_reward, player.chosen_image_one_binary, player.chosen_image_two_binary, player.choice1_with, player.choice1_against, player.choice2_with, player.choice2_against,...
[33mlgl[39m  (2): player.computer_choice1, player.computer_choice2"
"2","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message."
"0","# Create output directory"
"0","dir.create(here(""output"", ""behav"", ""group""), recursive = TRUE, showWarnings = FALSE)"
"0",""
"0","# Perform tests and prepare data"
"0","choice_ttest <- t.test(data$player.choice2_accuracy * 100, "
"0","                      data$player.choice1_accuracy * 100, "
"0","                      paired = TRUE)"
"0","bet_ttest <- t.test(data$player.bet2, "
"0","                    data$player.bet1, "
"0","                    paired = TRUE)"
"0",""
"0","choice_data <- data %>%"
"0","  reframe("
"0","    value = c(mean(player.choice1_accuracy) * 100, mean(player.choice2_accuracy) * 100),"
"0","    se = c(sd(player.choice1_accuracy) * 100, sd(player.choice2_accuracy) * 100) / sqrt(n()),"
"0","    group = factor(c(""Choice 1"", ""Choice 2""))"
"0","  )"
"0",""
"0","bet_data <- data %>%"
"0","  reframe("
"0","    value = c(mean(player.bet1), mean(player.bet2)),"
"0","    se = c(sd(player.bet1), sd(player.bet2)) / sqrt(n()),"
"0","    group = factor(c(""Bet 1"", ""Bet 2""))"
"0","  )"
"0",""
"0","# Function to format test results"
"0","format_test_results <- function(test_results, data, type) {"
"0","  paste0("
"0","    toupper(type), "" ANALYSIS\n"","
"0","    ""==============\n\n"","
"0","    ""Run on: "", format(Sys.time(), ""%Y-%m-%d %H:%M:%S""), ""\n\n"","
"0","    ""T-TEST RESULTS\n"","
"0","    ""=============\n"","
"0","    sprintf(""t = %.3f\n"", test_results$statistic),"
"0","    sprintf(""df = %d\n"", test_results$parameter),"
"0","    sprintf(""p = %.3e\n"", test_results$p.value),"
"0","    sprintf(""95%% CI [%.3f, %.3f]\n\n"", test_results$conf.int[1], test_results$conf.int[2]),"
"0","    ""DESCRIPTIVE STATISTICS\n"","
"0","    ""=====================\n"","
"0","    sprintf(""%s 1: %.2f (SE = %.2f)\n"", type, data$value[1], data$se[1]),"
"0","    sprintf(""%s 2: %.2f (SE = %.2f)"", type, data$value[2], data$se[2])"
"0","  )"
"0","}"
"0",""
"0","# Write results"
"0","writeLines("
"0","  format_test_results(choice_ttest, choice_data, ""Choice""),"
"0","  here(""output"", ""behav"", ""group"", ""choice_accuracy_difference.txt"")"
"0",")"
"0",""
"0","writeLines("
"0","  format_test_results(bet_ttest, bet_data, ""Bet""),"
"0","  here(""output"", ""behav"", ""group"", ""bet_magnitude_difference.txt"")"
"0",")"
"0",""
"0","# Create plots"
"0","plots <- list("
"0","  choice = ggplot(choice_data, aes(x = group, y = value)) +"
"0","    geom_bar(stat = ""identity"", width = 0.2, fill = c(""#69b3e7"", ""#1f77b4"")) +"
"0","    geom_errorbar(aes(ymin = value - se, ymax = value + se), width = 0.07) +"
"0","    scale_y_continuous(expand = c(0, 0)) +"
"0","    annotate(""text"", x = 1.5, y = max(choice_data$value + choice_data$se) - 2,"
"0","             label = sprintf(""P = %.2e"", choice_ttest$p.value)) +"
"0","    ylab(""Choice accuracy (%)"") +"
"0","    theme_classic() +"
"0","    theme(axis.title.x = element_blank()),"
"0","    "
"0","  bet = ggplot(bet_data, aes(x = group, y = value)) +"
"0","    geom_bar(stat = ""identity"", width = 0.2, fill = c(""#98cb85"", ""#2ca02c"")) +"
"0","    geom_errorbar(aes(ymin = value - se, ymax = value + se), width = 0.07) +"
"0","    scale_y_continuous(expand = c(0, 0)) +"
"0","    annotate(""text"", x = 1.5, y = max(bet_data$value + bet_data$se) - 0.2,"
"0","             label = sprintf(""P = %.4f"", bet_ttest$p.value)) +"
"0","    ylab(""Bet magnitude"") +"
"0","    theme_classic() +"
"0","    theme(axis.title.x = element_blank())"
"0",")"
"0",""
"0","# Print plots"
"0","print(plots$choice)"
